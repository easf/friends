-- MySQL Script generated by MySQL Workbench
-- Sun Jul 17 19:44:37 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

set global innodb_file_format = BARRACUDA;
SET GLOBAL innodb_file_per_table=ON;
set global innodb_large_prefix = ON;
-- -----------------------------------------------------
-- Schema friendsdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema friendsdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `friendsdb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `friendsdb` ;

-- -----------------------------------------------------
-- Table `friendsdb`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`user` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`user` (
  `idhash` VARCHAR(128) NOT NULL,
  `id` VARCHAR(128) NOT NULL,
  `name` VARCHAR(256) NOT NULL,
  `granted_permissions` TINYINT(1) NULL,
  PRIMARY KEY (`idhash`))
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`page`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`page` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`page` (
  `id` VARCHAR(128) NOT NULL,
  `name` VARCHAR(256) NULL,
  `category` VARCHAR(128) NULL,
  `total_fans` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`profile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`profile` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`profile` (
  `user_idhash` VARCHAR(128) NOT NULL,
  `birthday` VARCHAR(64) NULL,
  `gender` CHAR(1) NULL,
  `hometown_id` VARCHAR(128) NULL,
  `hometown_name` VARCHAR(256) NULL,
  `location_id` VARCHAR(128) NULL,
  `location_name` VARCHAR(256) NULL,
  `political_view` VARCHAR(256) NULL,
  `religion` VARCHAR(256) NULL,
  `interested_women` TINYINT(1) NULL,
  `interested_men` TINYINT(1) NULL,
  `relationship_status` VARCHAR(128) NULL,
  `language_1` VARCHAR(64) NULL,
  `language_2` VARCHAR(64) NULL,
  `language_3` VARCHAR(64) NULL,
  `language_4` VARCHAR(64) NULL,
  `language_5` VARCHAR(64) NULL,
  PRIMARY KEY (`user_idhash`),
  CONSTRAINT `fk_profile_user`
    FOREIGN KEY (`user_idhash`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`place`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`place` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`place` (
  `id` VARCHAR(128) NOT NULL,
  `type` VARCHAR(128) NULL,
  `name` VARCHAR(256) NULL,
  `school_type` VARCHAR(128) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`relationship`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`relationship` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`relationship` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_idhash` VARCHAR(128) NOT NULL,
  `user_idhash1` VARCHAR(128) NOT NULL,
  `relationship_type` VARCHAR(128) NULL,
  `description` VARCHAR(256) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_relationship_user2_idx` (`user_idhash1` ASC),
  CONSTRAINT `fk_relationship_user1`
    FOREIGN KEY (`user_idhash`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_relationship_user2`
    FOREIGN KEY (`user_idhash1`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`reaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`reaction` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`reaction` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_idhash` VARCHAR(256) NOT NULL,
  `post_id` VARCHAR(256) NOT NULL,
  `comment_id` VARCHAR(256) NULL,
  `type` VARCHAR(128) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reaction_user1_idx` (`user_idhash` ASC),
  CONSTRAINT `fk_reaction_user1`
    FOREIGN KEY (`user_idhash`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`post`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`post` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`post` (
  `local_id` INT NOT NULL AUTO_INCREMENT,
  `id` VARCHAR(256) NOT NULL,
  `user_idhash` VARCHAR(128) NOT NULL,
  `created_time` VARCHAR(128) NULL,
  `type` VARCHAR(128) NULL,
  `story` VARCHAR(256) NULL,
  `privacy` VARCHAR(128) NULL,
  `text_length` INT NULL,
  `link` VARCHAR(512) NULL,
  `nreactions` INT NULL,
  `ncomments` INT NULL,
  `application` VARCHAR(64) NULL,
  PRIMARY KEY (`local_id`),
  INDEX `fk_post_user1_idx` (`user_idhash` ASC),
  CONSTRAINT `fk_post_user1`
    FOREIGN KEY (`user_idhash`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`comment` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`comment` (
  `local_id` INT NOT NULL AUTO_INCREMENT,
  `id` VARCHAR(256) NOT NULL,
  `post_id` VARCHAR(256) NOT NULL,
  `user_idhash` VARCHAR(128) NOT NULL,
  `created_time` VARCHAR(128) NULL,
  `has_picture` TINYINT(1) NULL,
  `has_link` TINYINT(1) NULL,
  `nreactions` INT NULL,
  `ncomments` INT NULL,
  `text_lenght` INT NULL,
  PRIMARY KEY (`local_id`),
  INDEX `fk_comment_user1_idx` (`user_idhash` ASC),
  CONSTRAINT `fk_comment_user1`
    FOREIGN KEY (`user_idhash`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`tag` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`tag` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `post_id` VARCHAR(256) NOT NULL,
  `comment_id` VARCHAR(256) NULL,
  `type` VARCHAR(128) NULL,
  `user_idhash` VARCHAR(128) NULL,
  `page_id` VARCHAR(128) NULL,
  INDEX `fk_tag_user1_idx` (`user_idhash` ASC),
  INDEX `fk_tag_page1_idx` (`page_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_tag_user1`
    FOREIGN KEY (`user_idhash`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tag_page1`
    FOREIGN KEY (`page_id`)
    REFERENCES `friendsdb`.`page` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`user_likes_page`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`user_likes_page` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`user_likes_page` (
  `user_idhash` VARCHAR(128) NOT NULL,
  `page_id` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`user_idhash`, `page_id`),
  INDEX `fk_user_has_page_page1_idx` (`page_id` ASC),
  INDEX `fk_user_has_page_user1_idx` (`user_idhash` ASC),
  CONSTRAINT `fk_user_has_page_user1`
    FOREIGN KEY (`user_idhash`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_page_page1`
    FOREIGN KEY (`page_id`)
    REFERENCES `friendsdb`.`page` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`comment_has_comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`comment_has_comment` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`comment_has_comment` (
  `local_id` INT NOT NULL AUTO_INCREMENT,
  `comment_id` VARCHAR(256) NOT NULL,
  `comment_id1` VARCHAR(256) NOT NULL,
  PRIMARY KEY (`local_id`))
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`user_has_place`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`user_has_place` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`user_has_place` (
  `user_idhash` VARCHAR(128) NOT NULL,
  `place_id` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`user_idhash`, `place_id`),
  INDEX `fk_user_has_place_place1_idx` (`place_id` ASC),
  INDEX `fk_user_has_place_user1_idx` (`user_idhash` ASC),
  CONSTRAINT `fk_user_has_place_place1`
    FOREIGN KEY (`place_id`)
    REFERENCES `friendsdb`.`place` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_place_user1`
    FOREIGN KEY (`user_idhash`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`user_with_in_place`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`user_with_in_place` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`user_with_in_place` (
  `user_idhash` VARCHAR(128) NOT NULL,
  `user_has_place_user_idhash` VARCHAR(128) NOT NULL,
  `user_has_place_place_id` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`user_idhash`, `user_has_place_user_idhash`, `user_has_place_place_id`),
  INDEX `fk_user_has_user_has_place_user1_idx` (`user_idhash` ASC),
  INDEX `fk_user_with_in_place_user_has_place1_idx` (`user_has_place_user_idhash` ASC, `user_has_place_place_id` ASC),
  CONSTRAINT `fk_user_has_user_has_place_user1`
    FOREIGN KEY (`user_idhash`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_with_in_place_user_has_place1`
    FOREIGN KEY (`user_has_place_user_idhash` , `user_has_place_place_id`)
    REFERENCES `friendsdb`.`user_has_place` (`user_idhash` , `place_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`user_in_place_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`user_in_place_details` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`user_in_place_details` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_has_place_user_idhash` VARCHAR(128) NOT NULL,
  `user_has_place_place_id` VARCHAR(128) NOT NULL,
  `school_concentration` VARCHAR(256) NULL,
  `location_id` VARCHAR(128) NULL,
  `location_name` VARCHAR(256) NULL,
  `position_id` VARCHAR(128) NULL,
  `position_name` VARCHAR(256) NULL,
  `start_date` VARCHAR(64) NULL,
  `end_date` VARCHAR(64) NULL,
  PRIMARY KEY (`id`, `user_has_place_user_idhash`, `user_has_place_place_id`),
  INDEX `fk_user_in_place_details_user_has_place1_idx` (`user_has_place_user_idhash` ASC, `user_has_place_place_id` ASC),
  CONSTRAINT `fk_user_in_place_details_user_has_place1`
    FOREIGN KEY (`user_has_place_user_idhash` , `user_has_place_place_id`)
    REFERENCES `friendsdb`.`user_has_place` (`user_idhash` , `place_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`connectedness`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`connectedness` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`connectedness` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_idhash` VARCHAR(128) NOT NULL,
  `user_idhash1` VARCHAR(128) NOT NULL,
  `connectedness_level` INT NULL,
  `f2f_interaction` INT NULL,
  `online_interaction` INT NULL,
  INDEX `fk_user_has_user_user2_idx` (`user_idhash1` ASC),
  INDEX `fk_user_has_user_user1_idx` (`user_idhash` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_user_has_user_user1`
    FOREIGN KEY (`user_idhash`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_user_user2`
    FOREIGN KEY (`user_idhash1`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;


-- -----------------------------------------------------
-- Table `friendsdb`.`common_aspect`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `friendsdb`.`common_aspect` ;

CREATE TABLE IF NOT EXISTS `friendsdb`.`common_aspect` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_idhash` VARCHAR(128) NOT NULL,
  `user_idhash1` VARCHAR(128) NOT NULL,
  `type` VARCHAR(64) NULL,
  `description` VARCHAR(128) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_has_user_user4_idx` (`user_idhash1` ASC),
  INDEX `fk_user_has_user_user3_idx` (`user_idhash` ASC),
  CONSTRAINT `fk_user_has_user_user3`
    FOREIGN KEY (`user_idhash`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_user_user4`
    FOREIGN KEY (`user_idhash1`)
    REFERENCES `friendsdb`.`user` (`idhash`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;

--
-- Temporary view structure for view `most_comments`
--

DROP TABLE IF EXISTS `most_comments`;
/*!50001 DROP VIEW IF EXISTS `most_comments`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `most_comments` AS SELECT 
 1 AS `po_fbid`,
 1 AS `po_id`,
 1 AS `post_owner`,
 1 AS `friend_fbid`,
 1 AS `friend_id`,
 1 AS `friend`,
 1 AS `total_interactions`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `most_reactions`
--

DROP TABLE IF EXISTS `most_reactions`;
/*!50001 DROP VIEW IF EXISTS `most_reactions`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `most_reactions` AS SELECT 
 1 AS `po_fbid`,
 1 AS `po_id`,
 1 AS `post_owner`,
 1 AS `friend_fbid`,
 1 AS `friend_id`,
 1 AS `friend`,
 1 AS `total_interactions`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `most_tagged`
--

DROP TABLE IF EXISTS `most_tagged`;
/*!50001 DROP VIEW IF EXISTS `most_tagged`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `most_tagged` AS SELECT 
 1 AS `po_fbid`,
 1 AS `po_id`,
 1 AS `post_owner`,
 1 AS `friend_fbid`,
 1 AS `friend_id`,
 1 AS `friend`,
 1 AS `total_interactions`*/;
SET character_set_client = @saved_cs_client;


--
-- Temporary view structure for view `comments_replied_by_comment`
--

DROP TABLE IF EXISTS `comments_replied_by_comment`;
/*!50001 DROP VIEW IF EXISTS `comments_replied_by_comment`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `comments_replied_by_comment` AS SELECT 
 1 AS `po_fbid`,
 1 AS `po_id`,
 1 AS `post_owner`,
 1 AS `friend_fbid`,
 1 AS `friend_id`,
 1 AS `friend`,
 1 AS `total_interactions`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `comments_replied_by_reaction`
--

DROP TABLE IF EXISTS `comments_replied_by_reaction`;
/*!50001 DROP VIEW IF EXISTS `comments_replied_by_reaction`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `comments_replied_by_reaction` AS SELECT 
 1 AS `po_fbid`,
 1 AS `po_id`,
 1 AS `post_owner`,
 1 AS `friend_fbid`,
 1 AS `friend_id`,
 1 AS `friend`,
 1 AS `total_interactions`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `interactions_in_posts`
--

DROP TABLE IF EXISTS `interactions_in_posts`;
/*!50001 DROP VIEW IF EXISTS `interactions_in_posts`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `interactions_in_posts` AS SELECT 
 1 AS `po_fbid`,
 1 AS `po_id`,
 1 AS `post_owner`,
 1 AS `friend_fbid`,
 1 AS `friend_id`,
 1 AS `friend`,
 1 AS `total_interactions`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `interactions_in_posts_replied`
--

DROP TABLE IF EXISTS `interactions_in_posts_replied`;
/*!50001 DROP VIEW IF EXISTS `interactions_in_posts_replied`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `interactions_in_posts_replied` AS SELECT 
 1 AS `po_fbid`,
 1 AS `po_id`,
 1 AS `post_owner`,
 1 AS `friend_fbid`,
 1 AS `friend_id`,
 1 AS `friend`,
 1 AS `total_interactions`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `interactions_in_posts_replied_summary`
--

DROP TABLE IF EXISTS `interactions_in_posts_replied_summary`;
/*!50001 DROP VIEW IF EXISTS `interactions_in_posts_replied_summary`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `interactions_in_posts_replied_summary` AS SELECT 
 1 AS `po_fbid`,
 1 AS `po_id`,
 1 AS `post_owner`,
 1 AS `friend_fbid`,
 1 AS `friend_id`,
 1 AS `friend`,
 1 AS `total_interaction`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `interactions_in_posts_summary`
--

DROP TABLE IF EXISTS `interactions_in_posts_summary`;
/*!50001 DROP VIEW IF EXISTS `interactions_in_posts_summary`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `interactions_in_posts_summary` AS SELECT 
 1 AS `po_fbid`,
 1 AS `po_id`,
 1 AS `post_owner`,
 1 AS `friend_fbid`,
 1 AS `friend_id`,
 1 AS `friend`,
 1 AS `total_interaction`*/;
SET character_set_client = @saved_cs_client;



--
-- Temporary view structure for view `ratio_amount_replied`
--

DROP TABLE IF EXISTS `ratio_amount_replied`;
/*!50001 DROP VIEW IF EXISTS `ratio_amount_replied`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `ratio_amount_replied` AS SELECT 
 1 AS `po_fbid`,
 1 AS `po_id`,
 1 AS `post_owner`,
 1 AS `friend_fbid`,
 1 AS `friend_id`,
 1 AS `friend`,
 1 AS `interaction_ratio`*/;
SET character_set_client = @saved_cs_client;


--
-- Final view structure for view `most_comments`
--

/*!50001 DROP VIEW IF EXISTS `most_comments`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `most_comments` AS select `u`.`id` AS `po_fbid`,`u`.`idhash` AS `po_id`,`u`.`name` AS `post_owner`,`u2`.`id` AS `friend_fbid`,`u2`.`idhash` AS `friend_id`,`u2`.`name` AS `friend`,count(`r`.`id`) AS `total_interactions` from ((((`user` `u` join `profile` `p` on((`u`.`idhash` = `p`.`user_idhash`))) join `post` `pt` on((`p`.`user_idhash` = `pt`.`user_idhash`))) join `comment` `r` on((`pt`.`id` = `r`.`post_id`))) join `user` `u2` on((`r`.`user_idhash` = `u2`.`idhash`))) where (`u`.`name` <> `u2`.`name`) group by `u`.`idhash`,`u2`.`idhash`,`u`.`name`,`u2`.`name`,`u`.`id`,`u2`.`id` order by `u`.`name`,count(`r`.`id`) desc */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `most_reactions`
--

/*!50001 DROP VIEW IF EXISTS `most_reactions`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `most_reactions` AS select `u`.`id` AS `po_fbid`,`u`.`idhash` AS `po_id`,`u`.`name` AS `post_owner`,`u2`.`id` AS `friend_fbid`,`u2`.`idhash` AS `friend_id`,`u2`.`name` AS `friend`,count(`r`.`id`) AS `total_interactions` from ((((`user` `u` join `profile` `p` on((`u`.`idhash` = `p`.`user_idhash`))) join `post` `pt` on((`p`.`user_idhash` = `pt`.`user_idhash`))) join `reaction` `r` on((`pt`.`id` = `r`.`post_id`))) join `user` `u2` on((`r`.`user_idhash` = `u2`.`idhash`))) where (`u`.`name` <> `u2`.`name`) group by `u`.`idhash`,`u2`.`idhash`,`u`.`name`,`u2`.`name`,`u`.`id`,`u2`.`id` order by `u`.`name`,count(`r`.`id`) desc */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `most_tagged`
--

/*!50001 DROP VIEW IF EXISTS `most_tagged`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `most_tagged` AS select `u`.`id` AS `po_fbid`,`u`.`idhash` AS `po_id`,`u`.`name` AS `post_owner`,`u2`.`id` AS `friend_fbid`,`u2`.`idhash` AS `friend_id`,`u2`.`name` AS `friend`,count(`r`.`id`) AS `total_interactions` from ((((`user` `u` join `profile` `p` on((`u`.`idhash` = `p`.`user_idhash`))) join `post` `pt` on((`p`.`user_idhash` = `pt`.`user_idhash`))) join `tag` `r` on((`pt`.`id` = `r`.`post_id`))) join `user` `u2` on((`r`.`user_idhash` = `u2`.`idhash`))) where (`u`.`name` <> `u2`.`name`) group by `u`.`idhash`,`u2`.`idhash`,`u`.`name`,`u2`.`name`,`u`.`id`,`u2`.`id` order by `u`.`name`,count(`r`.`id`) desc */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `comments_replied_by_comment`
--

/*!50001 DROP VIEW IF EXISTS `comments_replied_by_comment`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `comments_replied_by_comment` AS select `u`.`id` AS `po_fbid`,`u`.`idhash` AS `po_id`,`u`.`name` AS `post_owner`,`u2`.`id` AS `friend_fbid`,`u2`.`idhash` AS `friend_id`,`u2`.`name` AS `friend`,count(`r`.`id`) AS `total_interactions` from ((((((`user` `u` join `profile` `p` on((`u`.`idhash` = `p`.`user_idhash`))) join `post` `pt` on((`p`.`user_idhash` = `pt`.`user_idhash`))) join `comment` `r` on((`pt`.`id` = `r`.`post_id`))) join `user` `u2` on((`r`.`user_idhash` = `u2`.`idhash`))) join `comment_has_comment` `c2` on((`r`.`id` = `c2`.`comment_id`))) join `comment` `c3` on(((`c3`.`id` = `c2`.`comment_id1`) and (`c3`.`user_idhash` = `u`.`idhash`)))) where (`u`.`name` <> `u2`.`name`) group by `u`.`idhash`,`u2`.`idhash`,`u`.`name`,`u2`.`name`,`u`.`id`,`u2`.`id` order by `u`.`name`,count(`r`.`id`) desc */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `comments_replied_by_reaction`
--

/*!50001 DROP VIEW IF EXISTS `comments_replied_by_reaction`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `comments_replied_by_reaction` AS select `u`.`id` AS `po_fbid`,`u`.`idhash` AS `po_id`,`u`.`name` AS `post_owner`,`u2`.`id` AS `friend_fbid`,`u2`.`idhash` AS `friend_id`,`u2`.`name` AS `friend`,count(`r`.`id`) AS `total_interactions` from (((((`user` `u` join `profile` `p` on((`u`.`idhash` = `p`.`user_idhash`))) join `post` `pt` on((`p`.`user_idhash` = `pt`.`user_idhash`))) join `comment` `r` on((`pt`.`id` = `r`.`post_id`))) join `user` `u2` on((`r`.`user_idhash` = `u2`.`idhash`))) join `reaction` `r2` on((`r`.`id` = `r2`.`comment_id`))) where ((`u`.`name` <> `u2`.`name`) and (`r2`.`user_idhash` = `u`.`idhash`)) group by `u`.`idhash`,`u2`.`idhash`,`u`.`name`,`u2`.`name`,`u`.`id`,`u2`.`id` order by `u`.`name`,count(`r`.`id`) desc */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `interactions_in_posts`
--

/*!50001 DROP VIEW IF EXISTS `interactions_in_posts`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `interactions_in_posts` AS select `most_reactions`.`po_fbid` AS `po_fbid`,`most_reactions`.`po_id` AS `po_id`,`most_reactions`.`post_owner` AS `post_owner`,`most_reactions`.`friend_fbid` AS `friend_fbid`,`most_reactions`.`friend_id` AS `friend_id`,`most_reactions`.`friend` AS `friend`,`most_reactions`.`total_interactions` AS `total_interactions` from `most_reactions` union all select `most_comments`.`po_fbid` AS `po_fbid`,`most_comments`.`po_id` AS `po_id`,`most_comments`.`post_owner` AS `post_owner`,`most_comments`.`friend_fbid` AS `friend_fbid`,`most_comments`.`friend_id` AS `friend_id`,`most_comments`.`friend` AS `friend`,`most_comments`.`total_interactions` AS `total_interactions` from `most_comments` union all select `most_tagged`.`po_fbid` AS `po_fbid`,`most_tagged`.`po_id` AS `po_id`,`most_tagged`.`post_owner` AS `post_owner`,`most_tagged`.`friend_fbid` AS `friend_fbid`,`most_tagged`.`friend_id` AS `friend_id`,`most_tagged`.`friend` AS `friend`,`most_tagged`.`total_interactions` AS `total_interactions` from `most_tagged` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `interactions_in_posts_replied`
--

/*!50001 DROP VIEW IF EXISTS `interactions_in_posts_replied`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `interactions_in_posts_replied` AS select `comments_replied_by_reaction`.`po_fbid` AS `po_fbid`,`comments_replied_by_reaction`.`po_id` AS `po_id`,`comments_replied_by_reaction`.`post_owner` AS `post_owner`,`comments_replied_by_reaction`.`friend_fbid` AS `friend_fbid`,`comments_replied_by_reaction`.`friend_id` AS `friend_id`,`comments_replied_by_reaction`.`friend` AS `friend`,`comments_replied_by_reaction`.`total_interactions` AS `total_interactions` from `comments_replied_by_reaction` union all select `comments_replied_by_comment`.`po_fbid` AS `po_fbid`,`comments_replied_by_comment`.`po_id` AS `po_id`,`comments_replied_by_comment`.`post_owner` AS `post_owner`,`comments_replied_by_comment`.`friend_fbid` AS `friend_fbid`,`comments_replied_by_comment`.`friend_id` AS `friend_id`,`comments_replied_by_comment`.`friend` AS `friend`,`comments_replied_by_comment`.`total_interactions` AS `total_interactions` from `comments_replied_by_comment` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `interactions_in_posts_replied_summary`
--

/*!50001 DROP VIEW IF EXISTS `interactions_in_posts_replied_summary`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `interactions_in_posts_replied_summary` AS select `interactions_in_posts_replied`.`po_fbid` AS `po_fbid`,`interactions_in_posts_replied`.`po_id` AS `po_id`,`interactions_in_posts_replied`.`post_owner` AS `post_owner`,`interactions_in_posts_replied`.`friend_fbid` AS `friend_fbid`,`interactions_in_posts_replied`.`friend_id` AS `friend_id`,`interactions_in_posts_replied`.`friend` AS `friend`,sum(`interactions_in_posts_replied`.`total_interactions`) AS `total_interaction` from `interactions_in_posts_replied` group by `interactions_in_posts_replied`.`po_fbid`,`interactions_in_posts_replied`.`po_id`,`interactions_in_posts_replied`.`post_owner`,`interactions_in_posts_replied`.`friend_fbid`,`interactions_in_posts_replied`.`friend_id`,`interactions_in_posts_replied`.`friend` order by `interactions_in_posts_replied`.`post_owner`,sum(`interactions_in_posts_replied`.`total_interactions`) desc */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `interactions_in_posts_summary`
--

/*!50001 DROP VIEW IF EXISTS `interactions_in_posts_summary`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `interactions_in_posts_summary` AS select `interactions_in_posts`.`po_fbid` AS `po_fbid`,`interactions_in_posts`.`po_id` AS `po_id`,`interactions_in_posts`.`post_owner` AS `post_owner`,`interactions_in_posts`.`friend_fbid` AS `friend_fbid`,`interactions_in_posts`.`friend_id` AS `friend_id`,`interactions_in_posts`.`friend` AS `friend`,sum(`interactions_in_posts`.`total_interactions`) AS `total_interaction` from `interactions_in_posts` group by `interactions_in_posts`.`po_fbid`,`interactions_in_posts`.`po_id`,`interactions_in_posts`.`post_owner`,`interactions_in_posts`.`friend_fbid`,`interactions_in_posts`.`friend`,`interactions_in_posts`.`friend_id` order by `interactions_in_posts`.`post_owner`,sum(`interactions_in_posts`.`total_interactions`) desc */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;



--
-- Final view structure for view `ratio_amount_replied`
--

/*!50001 DROP VIEW IF EXISTS `ratio_amount_replied`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `ratio_amount_replied` AS select `amount`.`po_fbid` AS `po_fbid`,`amount`.`po_id` AS `po_id`,`amount`.`post_owner` AS `post_owner`,`amount`.`friend_fbid` AS `friend_fbid`,`amount`.`friend_id` AS `friend_id`,`amount`.`friend` AS `friend`,(`replied`.`total_interaction` / `amount`.`total_interaction`) AS `interaction_ratio` from (`interactions_in_posts_summary` `amount` join `interactions_in_posts_replied_summary` `replied` on((`amount`.`friend_id` = `replied`.`friend_id`))) group by `amount`.`po_fbid`,`amount`.`po_id`,`amount`.`post_owner`,`amount`.`friend_fbid`,`amount`.`friend` order by `amount`.`post_owner`,(`replied`.`total_interaction` / `amount`.`total_interaction`) desc */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;





SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
